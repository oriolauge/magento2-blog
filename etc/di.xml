<?xml version="1.0"?>
<!-- setup collection files for UI component grid and config of collection -->
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <preference for="OAG\Blog\Api\UrlFinderInterface" type="OAG\Blog\Model\UrlFinder" />
    <preference for="OAG\Blog\Api\PostRepositoryInterface" type="OAG\Blog\Model\PostRepository" />
    <preference for="OAG\Blog\Api\Data\PostInterface" type="OAG\Blog\Model\Post" />
    <preference for="OAG\Blog\Api\PostAttributeGroupRepositoryInterface" type="OAG\Blog\Model\PostAttributeGroupRepository" />
    <preference for="OAG\Blog\Api\PostAttributeRepositoryInterface" type="OAG\Blog\Model\PostAttributeRepository" />
    <preference for="OAG\Blog\Api\Data\PostSearchResultsInterface" type="OAG\Blog\Model\PostSearchResults" />

    <!-- Define collectionProcessor argument to use EAV SearchCriteria CollectionProcessor -->
    <type name="OAG\Blog\Model\PostRepository">
        <arguments>
            <argument name="collectionProcessor" xsi:type="object">Magento\Eav\Model\Api\SearchCriteria\CollectionProcessor</argument>
        </arguments>
    </type>
    <type name="OAG\Blog\Model\Post\ListCollection">
        <arguments>
            <argument name="collectionProcessor" xsi:type="object">Magento\Eav\Model\Api\SearchCriteria\CollectionProcessor</argument>
        </arguments>
    </type>

    <!-- Define contract between API Data and his repository -->
    <type name="Magento\Framework\Model\Entity\RepositoryFactory">
        <arguments>
            <argument name="entities" xsi:type="array">
                <item name="OAG\Blog\Api\Data\PostInterface" xsi:type="string">OAG\Blog\Api\PostRepositoryInterface</item>
            </argument>
        </arguments>
    </type>
    <!-- Necessary to add our new Entity types in metadata pool that is used in our module (ScopeOverridenValue) -->
    <type name="Magento\Framework\EntityManager\MetadataPool">
        <arguments>
            <argument name="metadata" xsi:type="array">
                <item name="OAG\Blog\Api\Data\PostInterface" xsi:type="array">
                    <item name="entityTableName" xsi:type="string">oag_blog_post</item> <!-- todo: better name: oag_blog_post_entity -->
                    <item name="eavEntityType" xsi:type="string">oag_blog_post</item>
                    <item name="identifierField" xsi:type="string">entity_id</item>
                    <item name="entityContext" xsi:type="array">
                        <item name="store" xsi:type="string">Magento\Store\Model\StoreScopeProvider</item>
                    </item>
                </item>
            </argument>
        </arguments>
    </type>
    <!-- Necessary to make create/update actions with EAV architecture -->
    <type name="Magento\Framework\EntityManager\HydratorPool">
        <arguments>
            <argument name="hydrators" xsi:type="array">
                <item name="OAG\Blog\Api\Data\PostInterface" xsi:type="string">Magento\Framework\EntityManager\AbstractModelHydrator</item>
            </argument>
        </arguments>
    </type>

    <!-- We will reuse the Catalog Image uploader to manage our blog images -->
    <virtualType name="OAG\Blog\PostImageUpload" type="Magento\Catalog\Model\ImageUploader">
        <arguments>
            <argument name="baseTmpPath" xsi:type="string">blog/tmp/post</argument>
            <argument name="basePath" xsi:type="string">blog/post</argument>
            <argument name="allowedExtensions" xsi:type="array">
                <item name="jpg" xsi:type="string">jpg</item>
                <item name="jpeg" xsi:type="string">jpeg</item>
                <item name="gif" xsi:type="string">gif</item>
                <item name="png" xsi:type="string">png</item>
                <item name="webp" xsi:type="string">webp</item>
            </argument>
            <argument name="allowedMimeTypes" xsi:type="array">
                <item name="jpg" xsi:type="string">image/jpg</item>
                <item name="jpeg" xsi:type="string">image/jpeg</item>
                <item name="gif" xsi:type="string">image/gif</item>
                <item name="png" xsi:type="string">image/png</item>
                <item name="webp" xsi:type="string">image/webp</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- With this configuration, we will define imageUploader constructor argument
    with our virtual class -->
    <type name="OAG\Blog\Controller\Adminhtml\Post\Upload">
        <arguments>
            <argument name="imageUploader" xsi:type="object">OAG\Blog\PostImageUpload</argument>
        </arguments>
    </type>

    <!-- Also, we need to configure the same argument to our backend image class -->
    <type name="OAG\Blog\Model\Post\Attribute\Backend\Image">
        <arguments>
            <argument name="imageUploader" xsi:type="object">OAG\Blog\PostImageUpload</argument>
        </arguments>
    </type>

    <!-- Necessary to add our urls in sitemap.xml -->
    <type name="Magento\Sitemap\Model\ItemProvider\Composite">
        <arguments>
            <argument name="itemProviders" xsi:type="array">
                <item name="OagBlogPagesProvider" xsi:type="object">
                    OAG\Blog\Model\Sitemap\ItemProvider\Blog
                </item>
                <item name="OagBlogPostProvider" xsi:type="object">
                    OAG\Blog\Model\Sitemap\ItemProvider\Post
                </item>
            </argument>
        </arguments>
    </type>

    <type name="Magento\Eav\Model\Entity\AttributeCache">
        <arguments>
            <argument name="unsupportedTypes" xsi:type="array">
                <item name="oag_blog" xsi:type="string">oag_blog</item>
            </argument>
        </arguments>
    </type>
    <type name="OAG\Blog\Ui\DataProvider\Post\Listing\DataProvider">
        <arguments>
            <argument name="collection" xsi:type="object" shared="false">OAG\Blog\Model\ResourceModel\Post\Collection</argument>
            <argument name="filterPool" xsi:type="object" shared="false">RefGridFilterPool</argument>
        </arguments>
    </type>
    <virtualType name="RefGridFilterPool" type="Magento\Framework\View\Element\UiComponent\DataProvider\FilterPool">
        <arguments>
            <argument name="appliers" xsi:type="array">
                <item name="regular" xsi:type="object">Magento\Framework\View\Element\UiComponent\DataProvider\RegularFilter</item>
                <item name="fulltext" xsi:type="object">Magento\Framework\View\Element\UiComponent\DataProvider\FulltextFilter</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Magento\Framework\View\Element\UiComponent\DataProvider\CollectionFactory">
        <arguments>
            <argument name="collections" xsi:type="array">
                <item name="oag_blog_post_listing_data_source" xsi:type="string">OAG\Blog\Model\ResourceModel\Post\Grid\Collection</item>
            </argument>
        </arguments>
    </type>
    <type name="OAG\Blog\Model\ResourceModel\Post\Grid\Collection">
        <arguments>
            <argument name="eventPrefix" xsi:type="string">oag_blog_post_grid_collection</argument>
            <argument name="eventObject" xsi:type="string">oag_blog_post_grid_collection</argument>
            <argument name="resourceModel" xsi:type="string">OAG\Blog\Model\ResourceModel\Post</argument>
        </arguments>
    </type>
</config>